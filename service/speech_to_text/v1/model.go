// Code generated by lark suite oapi sdk gen
package v1

import (
	"github.com/larksuite/oapi-sdk-go/api/core/tools"
)

type FileConfig struct {
	FileId          string   `json:"file_id,omitempty"`
	Format          string   `json:"format,omitempty"`
	EngineType      string   `json:"engine_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *FileConfig) MarshalJSON() ([]byte, error) {
	type cp FileConfig
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type Speech struct {
	Speech          string   `json:"speech,omitempty"`
	SpeechKey       string   `json:"speech_key,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *Speech) MarshalJSON() ([]byte, error) {
	type cp Speech
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type StreamConfig struct {
	StreamId        string   `json:"stream_id,omitempty"`
	SequenceId      int      `json:"sequence_id,omitempty"`
	Action          int      `json:"action,omitempty"`
	Format          string   `json:"format,omitempty"`
	EngineType      string   `json:"engine_type,omitempty"`
	ForceSendFields []string `json:"-"`
}

func (s *StreamConfig) MarshalJSON() ([]byte, error) {
	type cp StreamConfig
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type SpeechFileRecognizeReqBody struct {
	Speech          *Speech     `json:"speech,omitempty"`
	Config          *FileConfig `json:"config,omitempty"`
	ForceSendFields []string    `json:"-"`
}

func (s *SpeechFileRecognizeReqBody) MarshalJSON() ([]byte, error) {
	type cp SpeechFileRecognizeReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type SpeechFileRecognizeResult struct {
	RecognitionText string `json:"recognition_text,omitempty"`
}

type SpeechStreamRecognizeReqBody struct {
	Speech          *Speech       `json:"speech,omitempty"`
	Config          *StreamConfig `json:"config,omitempty"`
	ForceSendFields []string      `json:"-"`
}

func (s *SpeechStreamRecognizeReqBody) MarshalJSON() ([]byte, error) {
	type cp SpeechStreamRecognizeReqBody
	raw := cp(*s)
	return tools.MarshalJSON(raw, s.ForceSendFields)
}

type SpeechStreamRecognizeResult struct {
	StreamId        string `json:"stream_id,omitempty"`
	SequenceId      int    `json:"sequence_id,omitempty"`
	RecognitionText string `json:"recognition_text,omitempty"`
}
