// Code generated by lark suite oapi sdk gen
package v3

import (
	"github.com/larksuite/oapi-sdk-go/event/core/model"
)

type Department struct {
	Name               string   `json:"name,omitempty"`
	ParentDepartmentId string   `json:"parent_department_id,omitempty"`
	DepartmentId       string   `json:"department_id,omitempty"`
	OpenDepartmentId   string   `json:"open_department_id,omitempty"`
	LeaderUserId       string   `json:"leader_user_id,omitempty"`
	ChatId             string   `json:"chat_id,omitempty"`
	Order              int      `json:"order,omitempty"`
	UnitIds            []string `json:"unit_ids,omitempty"`
	MemberCount        int      `json:"member_count,omitempty"`
	Status             int      `json:"status,omitempty"`
}
type DepartmentEvent struct {
	Name               string   `json:"name,omitempty"`
	ParentDepartmentId string   `json:"parent_department_id,omitempty"`
	DepartmentId       string   `json:"department_id,omitempty"`
	OpenDepartmentId   string   `json:"open_department_id,omitempty"`
	LeaderUserId       string   `json:"leader_user_id,omitempty"`
	ChatId             string   `json:"chat_id,omitempty"`
	Order              int      `json:"order,omitempty"`
	UnitIds            []string `json:"unit_ids,omitempty"`
	MemberCount        int      `json:"member_count,omitempty"`
	Status             int      `json:"status,omitempty"`
}
type DepartmentUnit struct {
	UnitId   string `json:"unit_id,omitempty"`
	UnitType string `json:"unit_type,omitempty"`
	UnitName string `json:"unit_name,omitempty"`
}
type GroupEvent struct {
	UserGroupId string `json:"user_group_id,omitempty"`
	Name        string `json:"name,omitempty"`
}
type Member struct {
	UserGroupId string `json:"user_group_id,omitempty"`
	UserId      string `json:"user_id,omitempty"`
}
type Scope struct {
	Departments []*Department `json:"departments,omitempty"`
	Users       []*User       `json:"users,omitempty"`
	UserGroups  []*UserGroup  `json:"user_groups,omitempty"`
}
type User struct {
	UnionId         string            `json:"union_id,omitempty"`
	UserId          string            `json:"user_id,omitempty"`
	OpenId          string            `json:"open_id,omitempty"`
	Name            string            `json:"name,omitempty"`
	EnName          string            `json:"en_name,omitempty"`
	Email           string            `json:"email,omitempty"`
	Mobile          string            `json:"mobile,omitempty"`
	MobileVisible   bool              `json:"mobile_visible,omitempty"`
	Gender          int               `json:"gender,omitempty"`
	AvatarKey       string            `json:"avatar_key,omitempty"`
	Avatar          *AvatarInfo       `json:"avatar,omitempty"`
	Status          *UserStatus       `json:"status,omitempty"`
	DepartmentIds   []string          `json:"department_ids,omitempty"`
	LeaderUserId    string            `json:"leader_user_id,omitempty"`
	City            string            `json:"city,omitempty"`
	Country         string            `json:"country,omitempty"`
	WorkStation     string            `json:"work_station,omitempty"`
	JoinTime        int               `json:"join_time,omitempty"`
	IsTenantManager bool              `json:"is_tenant_manager,omitempty"`
	EmployeeNo      string            `json:"employee_no,omitempty"`
	EmployeeType    int               `json:"employee_type,omitempty"`
	Positions       []*UserPosition   `json:"positions,omitempty"`
	Orders          []*UserOrder      `json:"orders,omitempty"`
	TimeZone        string            `json:"time_zone,omitempty"`
	CustomAttrs     []*UserCustomAttr `json:"custom_attrs,omitempty"`
}
type UserEvent struct {
	OpenId          string            `json:"open_id,omitempty"`
	UserId          string            `json:"user_id,omitempty"`
	Name            string            `json:"name,omitempty"`
	EnName          string            `json:"en_name,omitempty"`
	Email           string            `json:"email,omitempty"`
	Mobile          string            `json:"mobile,omitempty"`
	MobileVisible   bool              `json:"mobile_visible,omitempty"`
	Gender          int               `json:"gender,omitempty"`
	Avatar          *AvatarInfo       `json:"avatar,omitempty"`
	Status          *UserStatus       `json:"status,omitempty"`
	DepartmentIds   []string          `json:"department_ids,omitempty"`
	LeaderUserId    string            `json:"leader_user_id,omitempty"`
	City            string            `json:"city,omitempty"`
	Country         string            `json:"country,omitempty"`
	WorkStation     string            `json:"work_station,omitempty"`
	JoinTime        int               `json:"join_time,omitempty"`
	IsTenantManager bool              `json:"is_tenant_manager,omitempty"`
	EmployeeNo      string            `json:"employee_no,omitempty"`
	EmployeeType    int               `json:"employee_type,omitempty"`
	Positions       []*UserPosition   `json:"positions,omitempty"`
	Orders          []*UserOrder      `json:"orders,omitempty"`
	TimeZone        string            `json:"time_zone,omitempty"`
	CustomAttrs     []*UserCustomAttr `json:"custom_attrs,omitempty"`
}
type UserGroup struct {
	UserGroupId string `json:"user_group_id,omitempty"`
	Name        string `json:"name,omitempty"`
	Type        int    `json:"type,omitempty"`
	MemberCount int    `json:"member_count,omitempty"`
	Status      int    `json:"status,omitempty"`
}
type UserGroupMember struct {
}

type AvatarInfo struct {
	Avatar72     string `json:"avatar_72,omitempty"`
	Avatar240    string `json:"avatar_240,omitempty"`
	Avatar640    string `json:"avatar_640,omitempty"`
	AvatarOrigin string `json:"avatar_origin,omitempty"`
}
type UserCustomAttr struct {
	Type  string               `json:"type,omitempty"`
	Id    string               `json:"id,omitempty"`
	Value *UserCustomAttrValue `json:"value,omitempty"`
}
type UserCustomAttrValue struct {
	Text  string `json:"text,omitempty"`
	Url   string `json:"url,omitempty"`
	PcUrl string `json:"pc_url,omitempty"`
}
type UserOrder struct {
	DepartmentId    string `json:"department_id,omitempty"`
	UserOrder       int    `json:"user_order,omitempty"`
	DepartmentOrder int    `json:"department_order,omitempty"`
}
type UserPosition struct {
	PositionCode       string `json:"position_code,omitempty"`
	PositionName       string `json:"position_name,omitempty"`
	DepartmentId       string `json:"department_id,omitempty"`
	LeaderUserId       string `json:"leader_user_id,omitempty"`
	LeaderPositionCode string `json:"leader_position_code,omitempty"`
	IsMajor            bool   `json:"is_major,omitempty"`
}
type UserStatus struct {
	IsFrozen    bool `json:"is_frozen,omitempty"`
	IsResigned  bool `json:"is_resigned,omitempty"`
	IsActivated bool `json:"is_activated,omitempty"`
}

type DepartmentCreateResult struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentGetResult struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentListResult struct {
	HasMore   bool          `json:"has_more,omitempty"`
	PageToken string        `json:"page_token,omitempty"`
	Items     []*Department `json:"items,omitempty"`
}

type DepartmentNomalizeReqBody struct {
	DepartmentId string `json:"department_id,omitempty"`
}

type DepartmentNomalizeDepartmentChatReqBody struct {
	DepartmentId string `json:"department_id,omitempty"`
}

type DepartmentParentResult struct {
	HasMore   bool          `json:"has_more,omitempty"`
	PageToken string        `json:"page_token,omitempty"`
	Items     []*Department `json:"items,omitempty"`
}

type DepartmentPatchResult struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentUpdateResult struct {
	Department *Department `json:"department,omitempty"`
}

type DepartmentUpdateDepartmentIdReqBody struct {
	NewDepartmentId string `json:"new_department_id,omitempty"`
}

type DepartmentUnitCreateResult struct {
	DepartmentUnit *DepartmentUnit `json:"department_unit,omitempty"`
}

type DepartmentUnitPatchReqBody struct {
	UnitType string `json:"unit_type,omitempty"`
	UnitName string `json:"unit_name,omitempty"`
}

type DepartmentUnitPatchResult struct {
	DepartmentUnit *DepartmentUnit `json:"department_unit,omitempty"`
}

type UserCreateResult struct {
	User *User `json:"user,omitempty"`
}

type UserDeleteReqBody struct {
	DepartmentChatAcceptorUserId string `json:"department_chat_acceptor_user_id,omitempty"`
	ExternalChatAcceptorUserId   string `json:"external_chat_acceptor_user_id,omitempty"`
	DocsAcceptorUserId           string `json:"docs_acceptor_user_id,omitempty"`
	CalendarAcceptorUserId       string `json:"calendar_acceptor_user_id,omitempty"`
	ApplicationAcceptorUserId    string `json:"application_acceptor_user_id,omitempty"`
	HelpdeskAcceptorUserId       string `json:"helpdesk_acceptor_user_id,omitempty"`
}

type UserGetResult struct {
	User *User `json:"user,omitempty"`
}

type UserListResult struct {
	HasMore   bool    `json:"has_more,omitempty"`
	PageToken string  `json:"page_token,omitempty"`
	Items     []*User `json:"items,omitempty"`
}

type UserPatchResult struct {
	User *User `json:"user,omitempty"`
}

type UserUpdateResult struct {
	User *User `json:"user,omitempty"`
}

type UserUpdateUserIdReqBody struct {
	NewUserId string `json:"new_user_id,omitempty"`
}

type UserGroupCreateResult struct {
	UserGroup *UserGroup `json:"user_group,omitempty"`
}

type UserGroupGetResult struct {
	UserGroup *UserGroup `json:"user_group,omitempty"`
}

type UserGroupListResult struct {
	HasMore   bool         `json:"has_more,omitempty"`
	PageToken string       `json:"page_token,omitempty"`
	Items     []*UserGroup `json:"items,omitempty"`
}

type UserGroupMemberCreateReqBody struct {
	UserId string `json:"user_id,omitempty"`
}

type UserGroupMemberListResult struct {
	HasMore   bool    `json:"has_more,omitempty"`
	PageToken string  `json:"page_token,omitempty"`
	Items     []*User `json:"items,omitempty"`
}

type UserGroupPatchResult struct {
	UserGroup *UserGroup `json:"user_group,omitempty"`
}

type UserGroupUpdateUserGroupIdReqBody struct {
	NewUserGroupId string `json:"new_user_group_id,omitempty"`
}

type DepartmentCreateEventData struct {
	Object *DepartmentEvent `json:"object,omitempty"`
}

type DepartmentCreateEvent struct {
	*model.BaseEventV2
	Event *DepartmentCreateEventData `json:"event"`
}

type DepartmentCreatedEventData struct {
	Object *DepartmentEvent `json:"object,omitempty"`
}

type DepartmentCreatedEvent struct {
	*model.BaseEventV2
	Event *DepartmentCreatedEventData `json:"event"`
}

type DepartmentDeleteEventData struct {
	Object    *DepartmentEvent `json:"object,omitempty"`
	OldObject *DepartmentEvent `json:"old_object,omitempty"`
}

type DepartmentDeleteEvent struct {
	*model.BaseEventV2
	Event *DepartmentDeleteEventData `json:"event"`
}

type DepartmentDeletedEventData struct {
	Object    *DepartmentEvent `json:"object,omitempty"`
	OldObject *DepartmentEvent `json:"old_object,omitempty"`
}

type DepartmentDeletedEvent struct {
	*model.BaseEventV2
	Event *DepartmentDeletedEventData `json:"event"`
}

type DepartmentUpdateEventData struct {
	Object    *DepartmentEvent `json:"object,omitempty"`
	OldObject *DepartmentEvent `json:"old_object,omitempty"`
}

type DepartmentUpdateEvent struct {
	*model.BaseEventV2
	Event *DepartmentUpdateEventData `json:"event"`
}

type DepartmentUpdatedEventData struct {
	Object    *DepartmentEvent `json:"object,omitempty"`
	OldObject *DepartmentEvent `json:"old_object,omitempty"`
}

type DepartmentUpdatedEvent struct {
	*model.BaseEventV2
	Event *DepartmentUpdatedEventData `json:"event"`
}

type ScopeUpdatedEventData struct {
	Added   *Scope `json:"added,omitempty"`
	Removed *Scope `json:"removed,omitempty"`
}

type ScopeUpdatedEvent struct {
	*model.BaseEventV2
	Event *ScopeUpdatedEventData `json:"event"`
}

type UserCreateEventData struct {
	Object *UserEvent `json:"object,omitempty"`
}

type UserCreateEvent struct {
	*model.BaseEventV2
	Event *UserCreateEventData `json:"event"`
}

type UserCreatedEventData struct {
	Object *UserEvent `json:"object,omitempty"`
}

type UserCreatedEvent struct {
	*model.BaseEventV2
	Event *UserCreatedEventData `json:"event"`
}

type UserDeleteEventData struct {
	Object *UserEvent `json:"object,omitempty"`
}

type UserDeleteEvent struct {
	*model.BaseEventV2
	Event *UserDeleteEventData `json:"event"`
}

type UserDeletedEventData struct {
	Object *UserEvent `json:"object,omitempty"`
}

type UserDeletedEvent struct {
	*model.BaseEventV2
	Event *UserDeletedEventData `json:"event"`
}

type UserUpdateEventData struct {
	Object    *UserEvent `json:"object,omitempty"`
	OldObject *UserEvent `json:"old_object,omitempty"`
}

type UserUpdateEvent struct {
	*model.BaseEventV2
	Event *UserUpdateEventData `json:"event"`
}

type UserUpdatedEventData struct {
	Object    *UserEvent `json:"object,omitempty"`
	OldObject *UserEvent `json:"old_object,omitempty"`
}

type UserUpdatedEvent struct {
	*model.BaseEventV2
	Event *UserUpdatedEventData `json:"event"`
}

type UserGroupCreateEventData struct {
	Object *GroupEvent `json:"object,omitempty"`
}

type UserGroupCreateEvent struct {
	*model.BaseEventV2
	Event *UserGroupCreateEventData `json:"event"`
}

type UserGroupCreatedEventData struct {
	Object *GroupEvent `json:"object,omitempty"`
}

type UserGroupCreatedEvent struct {
	*model.BaseEventV2
	Event *UserGroupCreatedEventData `json:"event"`
}

type UserGroupDeleteEventData struct {
	Object    *GroupEvent `json:"object,omitempty"`
	OldObject *GroupEvent `json:"old_object,omitempty"`
}

type UserGroupDeleteEvent struct {
	*model.BaseEventV2
	Event *UserGroupDeleteEventData `json:"event"`
}

type UserGroupDeletedEventData struct {
	Object    *GroupEvent `json:"object,omitempty"`
	OldObject *GroupEvent `json:"old_object,omitempty"`
}

type UserGroupDeletedEvent struct {
	*model.BaseEventV2
	Event *UserGroupDeletedEventData `json:"event"`
}

type UserGroupUpdateEventData struct {
	Object    *GroupEvent `json:"object,omitempty"`
	OldObject *GroupEvent `json:"old_object,omitempty"`
}

type UserGroupUpdateEvent struct {
	*model.BaseEventV2
	Event *UserGroupUpdateEventData `json:"event"`
}

type UserGroupUpdatedEventData struct {
	Object    *GroupEvent `json:"object,omitempty"`
	OldObject *GroupEvent `json:"old_object,omitempty"`
}

type UserGroupUpdatedEvent struct {
	*model.BaseEventV2
	Event *UserGroupUpdatedEventData `json:"event"`
}
