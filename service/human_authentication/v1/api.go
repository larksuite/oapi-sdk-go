// Code generated by lark suite oapi sdk gen
package v1

import (
	"github.com/larksuite/oapi-sdk-go/api"
	"github.com/larksuite/oapi-sdk-go/api/core/request"
	"github.com/larksuite/oapi-sdk-go/core"
	"github.com/larksuite/oapi-sdk-go/core/config"
)

type Service struct {
	conf      *config.Config
	Identitys *IdentityService
}

func NewService(conf *config.Config) *Service {
	s := &Service{
		conf: conf,
	}
	s.Identitys = newIdentityService(s)
	return s
}

type IdentityService struct {
	service *Service
}

func newIdentityService(service *Service) *IdentityService {
	return &IdentityService{
		service: service,
	}
}

type IdentityCreateReqCall struct {
	ctx         *core.Context
	identitys   *IdentityService
	body        *IdentityCreateReqBody
	queryParams map[string]interface{}
	optFns      []request.OptFn
}

func (rc *IdentityCreateReqCall) SetUserId(userId string) {
	rc.queryParams["user_id"] = userId
}
func (rc *IdentityCreateReqCall) SetUserIdType(userIdType string) {
	rc.queryParams["user_id_type"] = userIdType
}

func (rc *IdentityCreateReqCall) Do() (*IdentityCreateResult, error) {
	rc.optFns = append(rc.optFns, request.SetQueryParams(rc.queryParams))
	var result = &IdentityCreateResult{}
	req := request.NewRequest("/open-apis/human_authentication/v1/identities", "POST",
		[]request.AccessTokenType{request.AccessTokenTypeTenant}, rc.body, result, rc.optFns...)
	err := api.Send(rc.ctx, rc.identitys.service.conf, req)
	return result, err
}

func (identitys *IdentityService) Create(ctx *core.Context, body *IdentityCreateReqBody, optFns ...request.OptFn) *IdentityCreateReqCall {
	return &IdentityCreateReqCall{
		ctx:         ctx,
		identitys:   identitys,
		body:        body,
		queryParams: map[string]interface{}{},
		optFns:      optFns,
	}
}
